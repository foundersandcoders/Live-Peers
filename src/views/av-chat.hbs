

<!-- Holds own video, and peer video -->
<div class="full-page-container">
  <div class="videocontainer">
    <video class="myvideo video"></video>
    <video class="peervideo video"></video>
  </div>
</div>



<!-- SOCKET.IO SCRIPT -->
<script src="js/adapter.js"></script>
<script src="socket.io/socket.io.js"></script>
<script src="js/comms.js"></script>
<script src="js/webrtc.js"></script>
<script type="text/javascript">

  // Endpoints array
  const endpointid = "{{endpointid}}";
  const endpointlist = document.querySelector('.endpointlist');

  // Video Elts
  const myvideo = document.querySelector('.myvideo');
  const peervideo = document.querySelector('.peervideo');

  const mycomms = new Comms("{{roomname}}", "{{endpointid}}")
  const webrtc =  new WebRTC(mycomms);
        webrtc.addMyMediaStreamToVideo(myvideo)
        webrtc.peervideo = peervideo
        webrtc.onRTC = () => {
          myvideo.classList.add('roundify')
        }
  // Register Callback
  mycomms.registerHandler('CHATROOM', 'REGISTER', (from) =>{
    // If new endpoint in room, call them
    if (endpointid !== from) webrtc.callEndpoint(from);
  })
  // Register Endpoint First
  mycomms.send('CHATROOM', 'REGISTER', '', '{{endpointid}}');
</script>
